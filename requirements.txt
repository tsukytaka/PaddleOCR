shapely
scikit-image
imgaug
pyclipper
lmdb
tqdm
numpy
visualdl
rapidfuzz
opencv-python<=4.6.0.66
opencv-contrib-python<=4.6.0.66
cython
lxml
premailer
openpyxl
attrdict
PyMuPDF<1.21.0
Pillow
pyyaml

#training det
#python tools/train.py -c configs/det/red_chalk_PP-OCRv3_det_cml.yml -o Global.pretrained_model=./pretrain_models/Multilingual_PP-OCRv3_det_distill_train/best_accuracy Optimizer.base_lr=0.0001
#test detect
#python tools/infer_det.py -c configs/det/red_chalk_PP-OCRv3_det_cml.yml -o Global.infer_img="./train_data/det/chalkocr/val/01.png" Global.pretrained_model="./output/red_chalk_PP-OCR_v3_det/best_accuracy"
#inferent detect
#python tools/export_model.py -c configs/det/red_chalk_PP-OCRv3_det_cml.yml -o Global.pretrained_model="./output/red_chalk_PP-OCR_v3_det/best_accuracy" Global.save_inference_dir="./output/red_chalk_PP-OCR_v3_det_inference/"

#training rec
#python -m paddle.distributed.launch --gpus '0'  tools/train.py -c configs/rec/number_PP-OCRv3_rec.yml -o Global.pretrained_model=./pretrain_models/etlcdb_font_hwjp_number_plus_PP-OCRv3_pretrain_model/best_accuracy
#python -m paddle.distributed.launch --gpus '0'  tools/train.py -c configs/rec/PP-OCRv3/multi_language/injury_japan_PP-OCRv3_rec.yml -o Global.pretrained_model=./pretrain_models/japan_PP-OCRv3_rec_train/best_accuracy

#inferent
#python tools/infer_rec.py -c configs/rec/number_PP-OCRv3_rec.yml -o Global.pretrained_model=output/number_OCRv3/best_accuracy  Global.infer_img=testimg1.jpg

#export model -> env cpu (ocr)
#python tools/export_model.py -c configs/rec/number_PP-OCRv3_rec.yml -o Global.pretrained_model=output/number_OCRv3/best_accuracy  Global.save_inference_dir=output/number_OCRv3/etlcdb_font_hwjp_number_PP-OCRv3_inference/
#python tools/export_model.py -c configs/rec/PP-OCRv3/multi_language/injury_japan_PP-OCRv3_rec.yml -o Global.pretrained_model=./output/v3_japan_mobile/best_accuracy  Global.save_inference_dir=output/number_OCRv3/etlcdb_font_hwjp_number_PP-OCRv3_inference/